{"version":3,"sources":["PropertyFrame.js","ColorProperty.js","RangeProperty.js","SwitchProperty.js","SmartDevice.js","SmartHome.js","reportWebVitals.js","index.js"],"names":["PropertyFrame","props","align","span","style","textAlign","name","children","useState","value","setValue","type","intToColorString","onChange","e","rgb","v","target","parseInt","substr","id","i","toString","slice","RangeProperty","min","Number","max","defaultValue","SwitchProperty","justify","shape","onClick","trueText","falseText","SmartDevice","currentScene","setCurrentScene","visible","setVisible","handleChange","pid","ip","title","centered","closable","afterClose","afterHide","onCancel","footer","undefined","scenes","map","scene","index","properties","property","ColorProperty","SmartHome","state","json","onDeviceChange","bind","fetch","then","response","setState","this","devices","find","d","p","method","headers","body","JSON","stringify","className","width","height","pointerEvents","alignmentBaseline","x","y","fill","stroke","strokeWidth","device","createDevice","xlinkHref","ui","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e67e2a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default function PropertyFrame(props) {\r\n  return (\r\n    <>\r\n      <br />\r\n      <Row align=\"middle\">\r\n        <Col span={2}>\r\n          <b style={{textAlign: \"center\"}}>{props.name}</b>\r\n        </Col>\r\n        <Col span={22}>\r\n          {props.children}\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n    </>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport PropertyFrame from \"./PropertyFrame\";\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default function (props) {\r\n  const [value, setValue] = useState(props.value);\r\n\r\n  return (\r\n    <PropertyFrame name={props.name}>\r\n      <Input type=\"color\" value={intToColorString(value)} onChange={e=>{\r\n        let v = colorStringToInt(e.target.value);\r\n        setValue(v);\r\n        props.onChange(props.id, v);\r\n      }}/>\r\n      </PropertyFrame>\r\n  );\r\n}\r\n\r\n\r\nfunction intToColorString(i) {\r\n  let rgb = (\"000000\" + i.toString(16)).slice(-6);\r\n  return \"#\" + rgb;\r\n}\r\n\r\nfunction colorStringToInt(rgb) {\r\n    return parseInt(rgb.substr(1, 2) + rgb.substr(3, 2) + rgb.substr(5, 2), 16);\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Slider } from \"antd\";\r\nimport PropertyFrame from \"./PropertyFrame\";\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default function RangeProperty(props) {\r\n  const [value, setValue] = useState(props.value);\r\n\r\n  return <PropertyFrame name={props.name}>\r\n    <Slider min={Number(props.min)} max={Number(props.max)} defaultValue={props.value} onChange={(v)=>{\r\n      setValue(v);\r\n      props.onChange(props.id, v);\r\n    }}/>\r\n  </PropertyFrame>\r\n}\r\n","import { Button, Col, Row } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropertyFrame from \"./PropertyFrame\";\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default function SwitchProperty(props) {\r\n  const [value, setValue] = useState(props.value);\r\n\r\n  return (\r\n    <PropertyFrame name={props.name}>\r\n      <Row align=\"middle\" justify=\"center\">\r\n        <Col span={2}>\r\n          <Button shape=\"circle\" onClick={()=>{\r\n            setValue(true);\r\n            props.onChange(props.id, true);\r\n          }}>\r\n            {props.trueText}\r\n          </Button>\r\n        </Col>\r\n        <Col span={20} style={{textAlign: \"center\"}}>\r\n          <b>{value ? props.trueText : props.falseText}</b>\r\n        </Col>\r\n        <Col span={2}>\r\n          <Button shape=\"circle\" onClick={()=>{\r\n              setValue(false);\r\n              props.onChange(props.id, false);\r\n            }}>\r\n              {props.falseText}\r\n            </Button>\r\n        </Col>\r\n      </Row>\r\n    </PropertyFrame>\r\n  );\r\n}\r\n","import { Button, Modal } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RangeProperty from \"./RangeProperty\";\r\nimport SwitchPorperty from \"./SwitchProperty\";\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default function SmartDevice(props) {\r\n    const [currentScene, setCurrentScene] = useState(null);\r\n    const [visible, setVisible] = useState(true);\r\n\r\n  function handleChange(pid, value) {\r\n      props.onChange(props.ip, pid, value);\r\n  }\r\n\r\n  return (\r\n    <Modal visible={visible} title={<h2>{props.name}</h2>} centered={true} closable={true} afterClose={props.afterHide}\r\n    onCancel={()=>{\r\n        setVisible(false);\r\n    }}\r\n     footer={\r\n        props.scenes === undefined ? null :\r\n            props.scenes.map((scene, index) => {\r\n                return <Button key={index} type={currentScene === index ? \"primary\" : \"default\"} onClick={()=>{\r\n                    setCurrentScene(index);\r\n                    scene.properties.map((property) => {\r\n                        handleChange(property.id, property.value);\r\n                    });\r\n                }}>\r\n                    {scene.name}\r\n                </Button>\r\n            }) \r\n    }>\r\n        {\r\n            props.properties && <>\r\n                {\r\n                    props.properties.map((property, index) => {\r\n                        switch (property.type) {\r\n                            case \"bool\":\r\n                                return (\r\n                                    <SwitchPorperty\r\n                                        key={index}\r\n                                        value={property.value}\r\n                                        id={property.id}\r\n                                        name={property.name}\r\n                                        trueText={property.trueText}\r\n                                        falseText={property.falseText}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                );\r\n                            case \"range\":\r\n                                return (\r\n                                    <RangeProperty\r\n                                        key={index}\r\n                                        value={property.value}\r\n                                        id={property.id}\r\n                                        name={property.name}\r\n                                        min={property.min}\r\n                                        max={property.max}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                );\r\n                            case \"rgb\":\r\n                                return (\r\n                                    <ColorProperty\r\n                                        key={index}\r\n                                        value={property.value}\r\n                                        id={property.id}\r\n                                        name={property.name}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                );\r\n                            default:\r\n                                return property.name;\r\n                        }\r\n                    })\r\n                }\r\n            </>\r\n            \r\n        }\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SmartDevice from \"./SmartDevice\";\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default class SmartHome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { json: null, index: null };\r\n        this.onDeviceChange = this.onDeviceChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/model/init\").then(response => response.json()).then(json => { \r\n            this.setState({ json: json }) });\r\n    }\r\n\r\n    onDeviceChange(ip, pid, value) {\r\n        let device = this.state.json.devices.find(d => d.ip === ip);\r\n        let property = device.properties.find(p => p.id === pid);\r\n        property.ip = ip;\r\n        property.value = value;\r\n        fetch('/', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(property) });\r\n        // 模拟 fetch 返回一个新 json 对象\r\n        this.setState({json: {...this.state.json}});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container root\">\r\n                <svg width=\"1360\" height=\"980\" pointerEvents=\"none\">\r\n                <g alignmentBaseline=\"hanging\">\r\n                    {/* 阳台: 10, 10, 150, 340 */}\r\n                        <rect x=\"10\" y=\"10\" width=\"150\" height=\"340\" fill=\"#EDEDED\" />\r\n                        {/* 客厅: 160, 10, 340, 340\r\n            餐厅: 620, 10, 260, 340\r\n            厨房: 880, 150, 270, 250\r\n            玄关: 880, 10, 270, 140\r\n             */}\r\n                        <rect x=\"160\" y=\"10\" width=\"340\" height=\"340\" fill=\"#E6E1DD\" />\r\n                        <rect x=\"620\" y=\"10\" width=\"260\" height=\"340\" fill=\"#E6E1DD\" />\r\n                        <rect x=\"880\" y=\"150\" width=\"270\" height=\"250\" fill=\"#EDEDED\" />\r\n                        <rect x=\"880\" y=\"10\" width=\"270\" height=\"140\" fill=\"#DAD3C2\" />\r\n                        {/* 次卧: 160, 350, 340, 290 */}\r\n                        <rect x=\"160\" y=\"350\" width=\"340\" height=\"290\" fill=\"#EDEDED\" />\r\n                        {/* 主卧: 160, 640, 340, 330\r\n            主卫: 500, 760, 200, 210\r\n            */}\r\n                        <rect x=\"160\" y=\"640\" width=\"340\" height=\"330\" fill=\"#E6E1DD\" />\r\n                        <rect x=\"500\" y=\"760\" width=\"200\" height=\"210\" fill=\"#EDEDED\" />\r\n                        {/* 客卫: 620, 350, 260, 170\r\n            书房: 620, 520, 260, 240\r\n             */}\r\n                        <rect x=\"620\" y=\"350\" width=\"260\" height=\"170\" fill=\"#EDEDED\" />\r\n                        <rect x=\"880\" y=\"400\" width=\"20\" height=\"120\" fill=\"#EDEDED\" />\r\n                        <rect x=\"620\" y=\"520\" width=\"260\" height=\"240\" fill=\"#E6E1DD\" />\r\n                        {/* 走廊: 500, 10, 120, 630 */}\r\n                        <rect x=\"500\" y=\"10\" width=\"120\" height=\"630\" fill=\"#DAD3C2\" />\r\n\r\n\r\n                        {/* 阳台: 10, 10, 150, 340 */}\r\n                    <path\r\n                            d=\"M 10 10 h 150 v 80 M 12.5 10 v 340 h 147.5 v -80\"\r\n                        fill=\"transparent\"\r\n                        stroke=\"black\" strokeWidth=\"5\"\r\n                        />\r\n                        <text x=\"45\" y=\"170\" alignmentBaseline=\"hanging\">\r\n                            阳台\r\n          </text>\r\n                    {/* 客厅: 160, 10, 340, 340\r\n            餐厅: 620, 10, 260, 340\r\n            厨房: 880, 150, 270, 250\r\n            玄关: 880, 10, 270, 140\r\n             */}\r\n                    <path\r\n                        d=\"M 160 10 h 990 v 10 m 0 120 v 260 h -270 v -100 M 160 350 h 340 m 120 0 h 260 M 1150 150 h -270 v 50\"\r\n                        fill=\"transparent\"\r\n                        stroke=\"black\" strokeWidth=\"5\"\r\n                    />\r\n                    <text x=\"165\" y=\"170\" alignmentBaseline=\"hanging\">\r\n                        客厅\r\n          </text>\r\n                    <text x=\"640\" y=\"170\" alignmentBaseline=\"hanging\">\r\n                        餐厅\r\n          </text>\r\n                    <text x=\"1000\" y=\"155\" alignmentBaseline=\"hanging\">\r\n                        厨房\r\n          </text>\r\n                    <text x=\"1000\" y=\"80\" alignmentBaseline=\"hanging\">\r\n                        玄关\r\n          </text>\r\n                    {/* 次卧: 160, 350, 340, 290 */}\r\n                    <path\r\n                        d=\"M 160 350 v 290 h 350 m 100 0 h 10 m -120 0 v -160 m 0 -102.5 v -30\"\r\n                        fill=\"transparent\"\r\n                        stroke=\"black\" strokeWidth=\"5\"\r\n                    />\r\n                    <text x=\"320\" y=\"355\" alignmentBaseline=\"hanging\">\r\n                        次卧\r\n          </text>\r\n                    {/* 主卧: 160, 640, 340, 330\r\n            主卫: 500, 760, 200, 210\r\n            */}\r\n                    <path\r\n                        d=\"M 160 640 v 330 h 540 v -210 M 500 970 v -210 h 30 m 80 0 h 90\"\r\n                        fill=\"transparent\"\r\n                        stroke=\"black\" strokeWidth=\"5\"\r\n                    />\r\n                    <text x=\"320\" y=\"645\" alignmentBaseline=\"hanging\">\r\n                        主卧\r\n          </text>\r\n                    <text x=\"650\" y=\"765\" alignmentBaseline=\"hanging\">\r\n                        主卫\r\n          </text>\r\n                    {/* 客卫: 620, 350, 260, 170\r\n            书房: 620, 520, 260, 240\r\n             */}\r\n                    <path\r\n                        d=\"M 620 347.5 v 40 m 0 100 v 30 h 280 v -120 M 620 520 v 10 m 0 80 v 150 h 260 v -240\"\r\n                        fill=\"transparent\"\r\n                        stroke=\"black\" strokeWidth=\"5\"\r\n                    />\r\n                    <text x=\"640\" y=\"355\" alignmentBaseline=\"hanging\">\r\n                        客卫\r\n          </text>\r\n                    <text x=\"640\" y=\"525\" alignmentBaseline=\"hanging\">\r\n                        书房\r\n          </text>\r\n                </g>\r\n                {this.state.json && this.state.json.devices.map((device, index) => {\r\n                    return this.createDevice(device, index);\r\n                })}\r\n                </svg>\r\n                {this.state.json && this.state.index && \r\n                <SmartDevice\r\n                name={this.state.json.devices[this.state.index].name}\r\n                ip={this.state.json.devices[this.state.index].ip} \r\n                properties={this.state.json.devices[this.state.index].properties} \r\n                scenes={this.state.json.devices[this.state.index].scenes}\r\n                onChange={this.onDeviceChange} \r\n                afterHide={()=>{this.setState({index: null});}} />}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    createDevice(device, index) {\r\n        return <image xlinkHref={device.ui} key={index} x={device.x} y={device.y} width={device.width} height={device.height} pointerEvents=\"auto\" onClick={() => {\r\n            this.setState({ index: index });\r\n        }} />;\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './custom.css';\r\nimport SmartHome from './SmartHome';\r\nimport 'antd/dist/antd.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <SmartHome />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}