{"version":3,"sources":["PropertyFrame.js","ColorProperty.js","RangeProperty.js","SwitchProperty.js","RadioProperty.js","RangePlusProperty.js","TextProperty.js","SmartDevice.js","SmartHome.js","reportWebVitals.js","index.js"],"names":["PropertyFrame","props","align","span","style","textAlign","name","children","ColorProperty","useState","value","setValue","type","intToColorString","onChange","e","rgb","v","target","parseInt","substr","id","i","toString","slice","RangeProperty","step","tooltipVisible","min","Number","max","marks","defaultValue","onAfterChange","SwitchProperty","justify","shape","onClick","trueText","falseText","RadioProperty","Group","width","buttonStyle","values","map","index","Button","length","RangePlusProperty","disabled","icon","MinusOutlined","Math","PlusOutlined","TextProperty","SmartDevice","currentScene","setCurrentScene","visible","setVisible","handleChange","pid","ip","title","centered","closable","afterClose","afterHide","onCancel","footer","undefined","scenes","scene","properties","forEach","property","SmartHome","state","json","onDeviceChange","bind","fetch","then","response","setState","this","devices","find","d","p","method","headers","body","JSON","stringify","data","className","height","pointerEvents","alignmentBaseline","x","y","fill","stroke","strokeWidth","device","createDevice","xlinkHref","ui","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce840cc8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport 'antd/dist/antd.css';\n\nexport default function PropertyFrame(props) {\n  return (\n    <>\n      <br />\n      <Row align=\"middle\">\n        <Col span={2}>\n          <b style={{textAlign: \"center\"}}>{props.name}</b>\n        </Col>\n        <Col span={22}>\n          {props.children}\n        </Col>\n      </Row>\n    </>\n  )\n}","import React, { useState } from \"react\";\nimport { Input } from \"antd\";\nimport PropertyFrame from \"./PropertyFrame\";\nimport 'antd/dist/antd.css';\n\nexport default function ColorProperty(props) {\n  const [value, setValue] = useState(props.value);\n\n  return (\n    <PropertyFrame name={props.name}>\n      <Input type=\"color\" value={intToColorString(value)} onChange={e=>{\n        let v = colorStringToInt(e.target.value);\n        setValue(v);\n        props.onChange(props.id, v);\n      }}/>\n      </PropertyFrame>\n  );\n}\n\n\nfunction intToColorString(i) {\n  let rgb = (\"000000\" + i.toString(16)).slice(-6);\n  return \"#\" + rgb;\n}\n\nfunction colorStringToInt(rgb) {\n    return parseInt(rgb.substr(1, 2) + rgb.substr(3, 2) + rgb.substr(5, 2), 16);\n}","import React, { useState } from \"react\";\nimport { Slider } from \"antd\";\nimport PropertyFrame from \"./PropertyFrame\";\nimport 'antd/dist/antd.css';\n\nexport default function RangeProperty(props) {\n  const [step, setStep] = useState(props.step || 1);\n\n  return <PropertyFrame name={props.name}>\n    <Slider\n      tooltipVisible={false}\n      min={Number(props.min)} \n      max={Number(props.max)} \n      marks={props.marks ? props.marks : null}\n      step={step}\n      defaultValue={props.value} \n      onAfterChange={(v)=>{\n        props.onChange(props.id, v);\n      }}\n    />\n  </PropertyFrame>\n}\n","import { Button, Col, Row } from \"antd\";\nimport React, { useState } from \"react\";\nimport PropertyFrame from \"./PropertyFrame\";\nimport 'antd/dist/antd.css';\n\nexport default function SwitchProperty(props) {\n  const [value, setValue] = useState(props.value);\n\n  return (\n    <PropertyFrame name={props.name}>\n      <Row align=\"middle\" justify=\"center\">\n        <Col span={2}>\n          <Button shape=\"circle\" onClick={()=>{\n            setValue(true);\n            props.onChange(props.id, true);\n          }}>\n            {props.trueText}\n          </Button>\n        </Col>\n        <Col span={20} style={{textAlign: \"center\"}}>\n          <b>{value ? props.trueText : props.falseText}</b>\n        </Col>\n        <Col span={2}>\n          <Button shape=\"circle\" onClick={()=>{\n              setValue(false);\n              props.onChange(props.id, false);\n            }}>\n              {props.falseText}\n            </Button>\n        </Col>\n      </Row>\n    </PropertyFrame>\n  );\n}\n","import { Radio } from \"antd\";\nimport PropertyFrame from \"./PropertyFrame\";\n\nexport default function RadioProperty(props) {\n    return (\n        <PropertyFrame name={props.name}>\n            <Radio.Group\n                style={{width: \"100%\"}} \n                buttonStyle=\"solid\"\n                value={props.value} \n                onChange={(e)=>{\n                    props.onChange(props.id, e.target.value);\n                    }}\n            >\n                {\n                    props.values.map((v, index) => {\n                        return (\n                            <Radio.Button \n                                style={{width: `${100/props.values.length}%`, textAlign: \"center\"}}\n                                key={index} value={v.value}>\n                                    {v.name}\n                            </Radio.Button>\n                        )\n                    })\n                }\n                </Radio.Group>\n        </PropertyFrame>\n    )\n}","import { Button, Col, Row, Slider } from \"antd\";\nimport { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport React, {useState} from \"react\";\nimport PropertyFrame from \"./PropertyFrame\";\n\nexport default function RangePlusProperty(props) {\n    const [value, setValue] = useState(props.value || props.min);\n    const step = props.step || 1;\n\n    function handleSubClick() {\n        const v = Math.max(value - step, props.min);\n        setValue(v);\n        props.onChange(props.id, v);\n    }\n\n    function handleAddClick() {\n        const v = Math.min(value + step, props.max);\n        setValue(v);\n        props.onChange(props.id, v);\n    }\n\n    return (\n        <PropertyFrame name={props.name}>\n            <Row>\n                <Col span={2}>\n                    <Button \n                        disabled={value <= props.min} \n                        icon={<MinusOutlined />}\n                        onClick={handleSubClick}/>\n                </Col>\n                <Col span={20}>\n                    <Slider\n                        tooltipVisible={false}\n                        min={props.min} \n                        max={props.max} \n                        marks={props.marks ? props.marks : null}\n                        step={step} \n                        defaultValue={props.value} \n                        onAfterChange={\n                            (v) => {\n                                setValue(v);\n                                props.onChange(props.id, v);\n                            }\n                        }\n                    />\n                </Col>\n                <Col span={2}>\n                    <Button \n                        icon={<PlusOutlined />}\n                        disabled={value >= props.max} \n                        onClick={handleAddClick} />\n                </Col>\n            </Row>\n        </PropertyFrame>\n    )\n}","import { Input } from \"antd\";\r\nimport PropertyFrame from \"./PropertyFrame\";\r\n\r\nexport default function TextProperty(props) {\r\n    return (\r\n        <PropertyFrame name={props.name}>\r\n            <Input disabled={true} value={props.value} />\r\n        </PropertyFrame>\r\n    );\r\n}","import { Button, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport ColorProperty from \"./ColorProperty\";\nimport RangeProperty from \"./RangeProperty\";\nimport SwitchPorperty from \"./SwitchProperty\";\nimport 'antd/dist/antd.css';\nimport RadioProperty from \"./RadioProperty\";\nimport RangePlusProperty from \"./RangePlusProperty\";\nimport TextProperty from \"./TextProperty\";\n\nexport default function SmartDevice(props) {\n    const [currentScene, setCurrentScene] = useState(null);\n    const [visible, setVisible] = useState(true);\n\n  function handleChange(pid, value) {\n      props.onChange(props.ip, pid, value);\n  }\n\n  return (\n    <Modal visible={visible} title={<h2>{props.name}</h2>} centered={true} closable={true} afterClose={props.afterHide}\n    onCancel={()=>{\n        setVisible(false);\n    }}\n     footer={\n        props.scenes === undefined ? null :\n            props.scenes.map((scene, index) => {\n                return <Button key={index} type={currentScene === index ? \"primary\" : \"default\"} onClick={()=>{\n                    setCurrentScene(index);\n                    scene.properties.forEach((property) => {\n                        handleChange(property.id, property.value);\n                    });\n                }}>\n                    {scene.name}\n                </Button>\n            }) \n    }>\n        {\n            props.properties && <>\n                {\n                    props.properties.map((property, index) => {\n                        switch (property.type) {\n                            case \"bool\":\n                                return (\n                                    <SwitchPorperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        trueText={property.trueText}\n                                        falseText={property.falseText}\n                                        onChange={handleChange}\n                                    />\n                                );\n                            case \"range\":\n                                return (\n                                    <RangeProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        min={property.min}\n                                        max={property.max}\n                                        marks={property.marks}\n                                        onChange={handleChange}\n                                    />\n                                );\n                            case \"rgb\":\n                                return (\n                                    <ColorProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        onChange={handleChange}\n                                    />\n                                );\n                            case \"radio\":\n                                return (\n                                    <RadioProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        values={property.values}\n                                        onChange={handleChange}\n                                    />\n                                    );\n                            case \"range+\":\n                                return (\n                                    <RangePlusProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        min={property.min}\n                                        max={property.max}\n                                        marks={property.marks}\n                                        step={property.step}\n                                        onChange={handleChange}\n                                    />\n                                );\n                            case \"text\":\n                                return (\n                                    <TextProperty \n                                        key={index} \n                                        value={property.value} \n                                        name={property.name} \n                                    />\n                                );\n                            default:\n                                return property.name;\n                        }\n                    })\n                }\n            </>\n            \n        }\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport SmartDevice from \"./SmartDevice\";\nimport 'antd/dist/antd.css';\n\nexport default class SmartHome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { json: null, index: null };\n        this.onDeviceChange = this.onDeviceChange.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"/model/init\").then(response => response.json()).then(json => { \n            this.setState({ json: json }) });\n    }\n\n    onDeviceChange(ip, pid, value) {\n        let device = this.state.json.devices.find(d => d.ip === ip);\n        let property = device.properties.find(p => p.id === pid);\n        property.ip = ip;\n        property.value = value;\n        fetch('/', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(property) })\n        .then(response => response.json())\n        .then(data => {\n            this.setState({json: data});\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container root\">\n                <svg width=\"1360\" height=\"980\" pointerEvents=\"none\">\n                <g alignmentBaseline=\"hanging\">\n                    {/* 阳台: 10, 10, 150, 340 */}\n                        <rect x=\"10\" y=\"10\" width=\"150\" height=\"340\" fill=\"#EDEDED\" />\n                        {/* 客厅: 160, 10, 340, 340\n            餐厅: 620, 10, 260, 340\n            厨房: 880, 150, 270, 250\n            玄关: 880, 10, 270, 140\n             */}\n                        <rect x=\"160\" y=\"10\" width=\"340\" height=\"340\" fill=\"#E6E1DD\" />\n                        <rect x=\"620\" y=\"10\" width=\"260\" height=\"340\" fill=\"#E6E1DD\" />\n                        <rect x=\"880\" y=\"150\" width=\"270\" height=\"250\" fill=\"#EDEDED\" />\n                        <rect x=\"880\" y=\"10\" width=\"270\" height=\"140\" fill=\"#DAD3C2\" />\n                        {/* 次卧: 160, 350, 340, 290 */}\n                        <rect x=\"160\" y=\"350\" width=\"340\" height=\"290\" fill=\"#EDEDED\" />\n                        {/* 主卧: 160, 640, 340, 330\n            主卫: 500, 760, 200, 210\n            */}\n                        <rect x=\"160\" y=\"640\" width=\"340\" height=\"330\" fill=\"#E6E1DD\" />\n                        <rect x=\"500\" y=\"760\" width=\"200\" height=\"210\" fill=\"#EDEDED\" />\n                        {/* 客卫: 620, 350, 260, 170\n            书房: 620, 520, 260, 240\n             */}\n                        <rect x=\"620\" y=\"350\" width=\"260\" height=\"170\" fill=\"#EDEDED\" />\n                        <rect x=\"880\" y=\"400\" width=\"20\" height=\"120\" fill=\"#EDEDED\" />\n                        <rect x=\"620\" y=\"520\" width=\"260\" height=\"240\" fill=\"#E6E1DD\" />\n                        {/* 走廊: 500, 10, 120, 630 */}\n                        <rect x=\"500\" y=\"10\" width=\"120\" height=\"630\" fill=\"#DAD3C2\" />\n\n\n                        {/* 阳台: 10, 10, 150, 340 */}\n                    <path\n                            d=\"M 10 10 h 150 v 80 M 12.5 10 v 340 h 147.5 v -80\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                        />\n                        <text x=\"45\" y=\"170\" alignmentBaseline=\"hanging\">\n                            阳台\n          </text>\n                    {/* 客厅: 160, 10, 340, 340\n            餐厅: 620, 10, 260, 340\n            厨房: 880, 150, 270, 250\n            玄关: 880, 10, 270, 140\n             */}\n                    <path\n                        d=\"M 160 10 h 990 v 10 m 0 120 v 260 h -270 v -100 M 160 350 h 340 m 120 0 h 260 M 1150 150 h -270 v 50\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                    />\n                    <text x=\"165\" y=\"170\" alignmentBaseline=\"hanging\">\n                        客厅\n          </text>\n                    <text x=\"640\" y=\"170\" alignmentBaseline=\"hanging\">\n                        餐厅\n          </text>\n                    <text x=\"1000\" y=\"155\" alignmentBaseline=\"hanging\">\n                        厨房\n          </text>\n                    <text x=\"1000\" y=\"80\" alignmentBaseline=\"hanging\">\n                        玄关\n          </text>\n                    {/* 次卧: 160, 350, 340, 290 */}\n                    <path\n                        d=\"M 160 350 v 290 h 350 m 100 0 h 10 m -120 0 v -160 m 0 -102.5 v -30\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                    />\n                    <text x=\"320\" y=\"355\" alignmentBaseline=\"hanging\">\n                        次卧\n          </text>\n                    {/* 主卧: 160, 640, 340, 330\n            主卫: 500, 760, 200, 210\n            */}\n                    <path\n                        d=\"M 160 640 v 330 h 540 v -210 M 500 970 v -210 h 30 m 80 0 h 90\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                    />\n                    <text x=\"320\" y=\"645\" alignmentBaseline=\"hanging\">\n                        主卧\n          </text>\n                    <text x=\"650\" y=\"765\" alignmentBaseline=\"hanging\">\n                        主卫\n          </text>\n                    {/* 客卫: 620, 350, 260, 170\n            书房: 620, 520, 260, 240\n             */}\n                    <path\n                        d=\"M 620 347.5 v 40 m 0 100 v 30 h 280 v -120 M 620 520 v 10 m 0 80 v 150 h 260 v -240\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                    />\n                    <text x=\"640\" y=\"355\" alignmentBaseline=\"hanging\">\n                        客卫\n          </text>\n                    <text x=\"640\" y=\"525\" alignmentBaseline=\"hanging\">\n                        书房\n          </text>\n                </g>\n                {this.state.json && this.state.json.devices.map((device, index) => {\n                    return this.createDevice(device, index);\n                })}\n                </svg>\n                {this.state.json && this.state.index && \n                <SmartDevice\n                name={this.state.json.devices[this.state.index].name}\n                ip={this.state.json.devices[this.state.index].ip} \n                properties={this.state.json.devices[this.state.index].properties} \n                scenes={this.state.json.devices[this.state.index].scenes}\n                onChange={this.onDeviceChange} \n                afterHide={()=>{this.setState({index: null});}} />}\n            </div>\n        );\n    }\n\n    createDevice(device, index) {\n        return <image xlinkHref={device.ui} key={index} x={device.x} y={device.y} width={device.width} height={device.height} pointerEvents=\"auto\" onClick={() => {\n            this.setState({ index: index });\n        }} />;\n    }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.css';\nimport SmartHome from './SmartHome';\nimport 'antd/dist/antd.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <SmartHome />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}