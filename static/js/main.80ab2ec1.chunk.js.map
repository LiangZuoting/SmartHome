{"version":3,"sources":["PropertyFrame.js","ColorProperty.js","RangeProperty.js","SwitchProperty.js","RadioProperty.js","RangePlusProperty.js","TextProperty.js","SmartDevice.js","SmartHome.js","reportWebVitals.js","index.js"],"names":["PropertyFrame","props","align","span","style","textAlign","name","children","ColorProperty","useState","value","setValue","type","intToColorString","onChange","e","rgb","v","target","parseInt","substr","id","i","toString","slice","RangeProperty","step","tooltipVisible","min","Number","max","marks","onAfterChange","SwitchProperty","justify","shape","onClick","trueText","falseText","RadioProperty","Group","width","buttonStyle","values","map","index","Button","length","RangePlusProperty","disabled","icon","MinusOutlined","Math","PlusOutlined","TextProperty","SmartDevice","currentScene","setCurrentScene","visible","setVisible","json","setJson","loading","setLoading","handleChange","pid","property","properties","find","p","ip","fetch","headers","method","body","JSON","stringify","then","response","data","useEffect","title","centered","closable","afterClose","afterHide","onCancel","footer","undefined","scenes","scene","forEach","spinning","SmartHome","state","setState","className","height","pointerEvents","alignmentBaseline","x","y","fill","d","stroke","strokeWidth","this","Object","device","createDevice","xlinkHref","ui","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80ab2ec1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport 'antd/dist/antd.css';\n\nexport default function PropertyFrame(props) {\n  return (\n    <>\n      <br />\n      <Row align=\"middle\">\n        <Col span={2}>\n          <b style={{textAlign: \"center\"}}>{props.name}</b>\n        </Col>\n        <Col span={22}>\n          {props.children}\n        </Col>\n      </Row>\n    </>\n  )\n}","import React, { useState } from \"react\";\nimport { Input } from \"antd\";\nimport PropertyFrame from \"./PropertyFrame\";\nimport 'antd/dist/antd.css';\n\nexport default function ColorProperty(props) {\n  const [value, setValue] = useState(props.value);\n\n  return (\n    <PropertyFrame name={props.name}>\n      <Input type=\"color\" value={intToColorString(value)} onChange={e=>{\n        let v = colorStringToInt(e.target.value);\n        setValue(v);\n        props.onChange(props.id, v);\n      }}/>\n      </PropertyFrame>\n  );\n}\n\n\nfunction intToColorString(i) {\n  let rgb = (\"000000\" + i.toString(16)).slice(-6);\n  return \"#\" + rgb;\n}\n\nfunction colorStringToInt(rgb) {\n    return parseInt(rgb.substr(1, 2) + rgb.substr(3, 2) + rgb.substr(5, 2), 16);\n}","import React, { useState } from \"react\";\nimport { Slider } from \"antd\";\nimport PropertyFrame from \"./PropertyFrame\";\nimport 'antd/dist/antd.css';\n\nexport default function RangeProperty(props) {\n  const [step, setStep] = useState(props.step || 1);\n  const [value, setValue] = useState(props.value);\n\n  return <PropertyFrame name={props.name}>\n    <Slider\n      tooltipVisible={false}\n      min={Number(props.min)} \n      max={Number(props.max)} \n      marks={props.marks ? props.marks : null}\n      step={step}\n      value={props.value}\n      onAfterChange={(v)=>{\n        setValue(v);\n        props.onChange(props.id, v);\n      }}\n    />\n  </PropertyFrame>\n}\n","import { Button, Col, Row } from \"antd\";\nimport React, { useState } from \"react\";\nimport PropertyFrame from \"./PropertyFrame\";\nimport 'antd/dist/antd.css';\n\nexport default function SwitchProperty(props) {\n  const [value, setValue] = useState(props.value);\n\n  return (\n    <PropertyFrame name={props.name}>\n      <Row align=\"middle\" justify=\"center\">\n        <Col span={2}>\n          <Button shape=\"circle\" onClick={()=>{\n            setValue(true);\n            props.onChange(props.id, true);\n          }}>\n            {props.trueText}\n          </Button>\n        </Col>\n        <Col span={20} style={{textAlign: \"center\"}}>\n          <b>{value ? props.trueText : props.falseText}</b>\n        </Col>\n        <Col span={2}>\n          <Button shape=\"circle\" onClick={()=>{\n              setValue(false);\n              props.onChange(props.id, false);\n            }}>\n              {props.falseText}\n            </Button>\n        </Col>\n      </Row>\n    </PropertyFrame>\n  );\n}\n","import { Radio } from \"antd\";\nimport PropertyFrame from \"./PropertyFrame\";\n\nexport default function RadioProperty(props) {\n    return (\n        <PropertyFrame name={props.name}>\n            <Radio.Group\n                style={{width: \"100%\"}} \n                buttonStyle=\"solid\"\n                value={props.value} \n                onChange={(e)=>{\n                    props.onChange(props.id, e.target.value);\n                    }}\n            >\n                {\n                    props.values.map((v, index) => {\n                        return (\n                            <Radio.Button \n                                style={{width: `${100/props.values.length}%`, textAlign: \"center\"}}\n                                key={index} value={v.value}>\n                                    {v.name}\n                            </Radio.Button>\n                        )\n                    })\n                }\n                </Radio.Group>\n        </PropertyFrame>\n    )\n}","import { Button, Col, Row, Slider } from \"antd\";\nimport { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport React, {useState} from \"react\";\nimport PropertyFrame from \"./PropertyFrame\";\n\nexport default function RangePlusProperty(props) {\n    const [value, setValue] = useState(props.value || props.min);\n    const step = props.step || 1;\n\n    function handleSubClick() {\n        const v = Math.max(value - step, props.min);\n        setValue(v);\n        props.onChange(props.id, v);\n    }\n\n    function handleAddClick() {\n        const v = Math.min(value + step, props.max);\n        setValue(v);\n        props.onChange(props.id, v);\n    }\n\n    return (\n        <PropertyFrame name={props.name}>\n            <Row>\n                <Col span={2}>\n                    <Button \n                        disabled={value <= props.min} \n                        icon={<MinusOutlined />}\n                        onClick={handleSubClick}/>\n                </Col>\n                <Col span={20}>\n                    <Slider\n                        tooltipVisible={false}\n                        min={props.min} \n                        max={props.max} \n                        marks={props.marks ? props.marks : null}\n                        step={step} \n                        value={value}\n                        onAfterChange={\n                            (v) => {\n                                setValue(v);\n                                props.onChange(props.id, v);\n                            }\n                        }\n                    />\n                </Col>\n                <Col span={2}>\n                    <Button \n                        icon={<PlusOutlined />}\n                        disabled={value >= props.max} \n                        onClick={handleAddClick} />\n                </Col>\n            </Row>\n        </PropertyFrame>\n    )\n}","import { Input } from \"antd\";\r\nimport PropertyFrame from \"./PropertyFrame\";\r\n\r\nexport default function TextProperty(props) {\r\n    return (\r\n        <PropertyFrame name={props.name}>\r\n            <Input disabled={true} value={props.value} />\r\n        </PropertyFrame>\r\n    );\r\n}","import {Button, Col, Modal, Row, Spin} from \"antd\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport ColorProperty from \"./ColorProperty\";\nimport RangeProperty from \"./RangeProperty\";\nimport SwitchProperty from \"./SwitchProperty\";\nimport 'antd/dist/antd.css';\nimport RadioProperty from \"./RadioProperty\";\nimport RangePlusProperty from \"./RangePlusProperty\";\nimport TextProperty from \"./TextProperty\";\n\nexport default function SmartDevice(props) {\n    const [currentScene, setCurrentScene] = useState(null);\n    const [visible, setVisible] = useState(true);\n    const [json, setJson] = useState(props.json);\n    const [loading, setLoading] = useState(true);\n    const [discoverEnabled, setDiscoverEnabled] = useState(true);\n\n  function handleChange(pid, value) {\n      setLoading(true);\n      let property = json.properties.find(p => p.id === pid);\n      property.ip = json.ip;\n      property.value = value;\n      fetch('/', {\n          headers: {\n              'content-type': 'application/json'\n          },\n          method: 'post',\n          body: JSON.stringify(property)\n      }).then(response => response.json())\n          .then(data => {\n             setJson(data);\n             setLoading(false);\n          });\n  }\n\n  function handleDiscoverDevice() {\n      setLoading(true);\n      setDiscoverEnabled(false);\n      fetch(`/discover/${json.ip}`).then(response => {\n          if (response.ok) {\n              response.json().then(data => {\n                  setLoading(false);\n                  setJson(data);\n                  setDiscoverEnabled(true);\n              });\n          } else {\n              setDiscoverEnabled(true);\n          }\n      });\n  }\n\n  useEffect(() => {\n      setLoading(true);\n      fetch(`/device/${json.ip}`).then(response => response.json()).then(data => {\n         setJson(data);\n         setLoading(false);\n      });\n  }, []);\n\n  return (\n    <Modal visible={visible} title={<h2>{json.name}</h2>} centered={true} closable={true} afterClose={props.afterHide}\n    onCancel={()=>{\n        setVisible(false);\n    }}\n     footer={\n        json.scenes === undefined ? null :\n            json.scenes.map((scene, index) => {\n                return <Button key={index} type={currentScene === index ? \"primary\" : \"default\"} onClick={()=>{\n                    setCurrentScene(index);\n                    scene.properties.forEach((property) => {\n                        handleChange(property.id, property.value);\n                    });\n                }}>\n                    {scene.name}\n                </Button>\n            }) \n    }>\n        {\n            json.properties && <Spin spinning={loading}>\n                {\n                    json.properties.map((property, index) => {\n                        switch (property.type) {\n                            case \"bool\":\n                                return (\n                                    <SwitchProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        trueText={property.trueText}\n                                        falseText={property.falseText}\n                                        onChange={handleChange}\n                                    />\n                                );\n                            case \"range\":\n                                return (\n                                    <RangeProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        min={property.min}\n                                        max={property.max}\n                                        marks={property.marks}\n                                        onChange={handleChange}\n                                    />\n                                );\n                            case \"rgb\":\n                                return (\n                                    <ColorProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        onChange={handleChange}\n                                    />\n                                );\n                            case \"radio\":\n                                return (\n                                    <RadioProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        values={property.values}\n                                        onChange={handleChange}\n                                    />\n                                    );\n                            case \"range+\":\n                                return (\n                                    <RangePlusProperty\n                                        key={index}\n                                        value={property.value}\n                                        id={property.id}\n                                        name={property.name}\n                                        min={property.min}\n                                        max={property.max}\n                                        marks={property.marks}\n                                        step={property.step}\n                                        onChange={handleChange}\n                                    />\n                                );\n                            case \"text\":\n                                return (\n                                    <TextProperty \n                                        key={index} \n                                        value={property.value} \n                                        name={property.name} \n                                    />\n                                );\n                            default:\n                                return property.name;\n                        }\n                    })\n                }\n            </Spin>\n        }\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport SmartDevice from \"./SmartDevice\";\nimport 'antd/dist/antd.css';\n\nexport default class SmartHome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { json: null, ip: null };\n    }\n\n    componentDidMount() {\n        fetch(\"/devices\").then(response => response.json()).then(data => {\n            this.setState({ json: data }) });\n    }\n\n    render() {\n        return (\n            <div className=\"container root\">\n                <svg width=\"1360\" height=\"980\" pointerEvents=\"none\">\n                <g alignmentBaseline=\"hanging\">\n                    {/* 阳台: 10, 10, 150, 340 */}\n                        <rect x=\"10\" y=\"10\" width=\"150\" height=\"340\" fill=\"#EDEDED\" />\n                        {/* 客厅: 160, 10, 340, 340\n            餐厅: 620, 10, 260, 340\n            厨房: 880, 150, 270, 250\n            玄关: 880, 10, 270, 140\n             */}\n                        <rect x=\"160\" y=\"10\" width=\"340\" height=\"340\" fill=\"#E6E1DD\" />\n                        <rect x=\"620\" y=\"10\" width=\"260\" height=\"340\" fill=\"#E6E1DD\" />\n                        <rect x=\"880\" y=\"150\" width=\"270\" height=\"250\" fill=\"#EDEDED\" />\n                        <rect x=\"880\" y=\"10\" width=\"270\" height=\"140\" fill=\"#DAD3C2\" />\n                        {/* 次卧: 160, 350, 340, 290 */}\n                        <rect x=\"160\" y=\"350\" width=\"340\" height=\"290\" fill=\"#EDEDED\" />\n                        {/* 主卧: 160, 640, 340, 330\n            主卫: 500, 760, 200, 210\n            */}\n                        <rect x=\"160\" y=\"640\" width=\"340\" height=\"330\" fill=\"#E6E1DD\" />\n                        <rect x=\"500\" y=\"760\" width=\"200\" height=\"210\" fill=\"#EDEDED\" />\n                        {/* 客卫: 620, 350, 260, 170\n            书房: 620, 520, 260, 240\n             */}\n                        <rect x=\"620\" y=\"350\" width=\"260\" height=\"170\" fill=\"#EDEDED\" />\n                        <rect x=\"880\" y=\"400\" width=\"20\" height=\"120\" fill=\"#EDEDED\" />\n                        <rect x=\"620\" y=\"520\" width=\"260\" height=\"240\" fill=\"#E6E1DD\" />\n                        {/* 走廊: 500, 10, 120, 630 */}\n                        <rect x=\"500\" y=\"10\" width=\"120\" height=\"630\" fill=\"#DAD3C2\" />\n\n\n                        {/* 阳台: 10, 10, 150, 340 */}\n                    <path\n                            d=\"M 10 10 h 150 v 80 M 12.5 10 v 340 h 147.5 v -80\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                        />\n                        <text x=\"45\" y=\"170\" alignmentBaseline=\"hanging\">\n                            阳台\n          </text>\n                    {/* 客厅: 160, 10, 340, 340\n            餐厅: 620, 10, 260, 340\n            厨房: 880, 150, 270, 250\n            玄关: 880, 10, 270, 140\n             */}\n                    <path\n                        d=\"M 160 10 h 990 v 10 m 0 120 v 260 h -270 v -100 M 160 350 h 340 m 120 0 h 260 M 1150 150 h -270 v 50\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                    />\n                    <text x=\"165\" y=\"170\" alignmentBaseline=\"hanging\">\n                        客厅\n          </text>\n                    <text x=\"640\" y=\"170\" alignmentBaseline=\"hanging\">\n                        餐厅\n          </text>\n                    <text x=\"1000\" y=\"155\" alignmentBaseline=\"hanging\">\n                        厨房\n          </text>\n                    <text x=\"1000\" y=\"80\" alignmentBaseline=\"hanging\">\n                        玄关\n          </text>\n                    {/* 次卧: 160, 350, 340, 290 */}\n                    <path\n                        d=\"M 160 350 v 290 h 350 m 100 0 h 10 m -120 0 v -160 m 0 -102.5 v -30\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                    />\n                    <text x=\"320\" y=\"355\" alignmentBaseline=\"hanging\">\n                        次卧\n          </text>\n                    {/* 主卧: 160, 640, 340, 330\n            主卫: 500, 760, 200, 210\n            */}\n                    <path\n                        d=\"M 160 640 v 330 h 540 v -210 M 500 970 v -210 h 30 m 80 0 h 90\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                    />\n                    <text x=\"320\" y=\"645\" alignmentBaseline=\"hanging\">\n                        主卧\n          </text>\n                    <text x=\"650\" y=\"765\" alignmentBaseline=\"hanging\">\n                        主卫\n          </text>\n                    {/* 客卫: 620, 350, 260, 170\n            书房: 620, 520, 260, 240\n             */}\n                    <path\n                        d=\"M 620 347.5 v 40 m 0 100 v 30 h 280 v -120 M 620 520 v 10 m 0 80 v 150 h 260 v -240\"\n                        fill=\"transparent\"\n                        stroke=\"black\" strokeWidth=\"5\"\n                    />\n                    <text x=\"640\" y=\"355\" alignmentBaseline=\"hanging\">\n                        客卫\n          </text>\n                    <text x=\"640\" y=\"525\" alignmentBaseline=\"hanging\">\n                        书房\n          </text>\n                </g>\n                {this.state.json && Object.values(this.state.json).map(device => {\n                    return this.createDevice(device);\n                })}\n                </svg>\n                {this.state.json && this.state.ip &&\n                <SmartDevice\n                    json={this.state.json[this.state.ip]}\n                    afterHide={()=>{this.setState({ip: null});}} />}\n            </div>\n        );\n    }\n\n    createDevice(device) {\n        return <image xlinkHref={device.ui} key={device.ip} x={device.x} y={device.y} width={device.width} height={device.height} pointerEvents=\"auto\" onClick={() => {\n            this.setState({ ip: device.ip });\n        }} />;\n    }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.css';\nimport SmartHome from './SmartHome';\nimport 'antd/dist/antd.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <SmartHome />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}